#!/usr/bin/python

import sys
import re

# 'READ', 'ON', 'ONBRK', 'ONERR', 'ATTR', 'DIM', 'FOR', 'PRINT', 'IF', 'NEXT', 'INPUT',

keywords = [
	'ATTR', 'AUDIO', 'BACKUP', 'CIRCLE', 'CLEAR', 'CLOAD', 'CLOSE', 'CLS', 'CMP', 'COLOR', 'CONT', 'COPY', 'CSAVE', 'DATA',
	'DEF', 'DIM', 'DIR', 'DLOAD', 'DOS', 'DRAW', 'DRIVE', 'DSKI$', 'DSKINI', 'DSKO$', 'END', 'EXEC', 'EXP', 'FIELD', 'FILES',
	'FOR', 'GET', 'GO', 'GOSUB', 'GOTO', 'HBUFF', 'HCIRCLE', 'HCLS', 'HCOLOR', 'HDRAW', 'HGET', 'HLINE', 'HPAINT', 'HPRINT',
	'HPUT', 'HRESET', 'HSCREEN', 'HSET', 'HSTAT', 'IF', 'INPUT', 'KILL', 'LET', 'LINE', 'LOAD', 'LOADM', 'LOCATE', 'LPOKE',
	'LSET', 'MERGE', 'MOTOR', 'NEW', 'NEXT', 'ON', 'ONBRK', 'ONERR', 'OPEN', 'PAINT', 'PALETTE', 'PCLEAR', 'PCLS', 'PCOPY',
	'PLAY', 'PMODE', 'POKE', 'PRESET', 'PRINT', 'PSET', 'PUT', 'READ', 'RENAME', 'RESET', 'RESTORE', 'RETURN', 'RGB', 'RSET',
	'SCREEN', 'SET', 'SKIPF', 'SOUND', 'STEP', 'STOP', 'TROFF', 'TRON', 'UNLOAD', 'USING', 'VERIFY', 'WIDTH', 'WRITE'
]

def minify(text):
	arr = text.strip().split('"')
	for i, item in enumerate(arr):
		if not i % 2:
			s = item.upper().strip()
			s = re.sub(r'([^A-Z])\s+', r'\1', s)
			s = re.sub(r'\s+([^A-Z])', r'\1', s)
			arr[i] = s
			if "'" in arr[i] or "REM" in arr[i]:
				j = i + 1
				del arr[j:]
				arr[i] = arr[i].split("'")[0]
	r = '"'.join(arr)
	m = re.search(r'[A-Z]', r, re.I)
	if m is not None:
		c = r[m.start()]
		for keyword in keywords:
			if keyword[0] == c:
				r = re.sub(r'(^\d*' + keyword + ') ', r'\1', r)
	return r

def optimize(text):

	value = re.sub(r':?ELSE:?', r'ELSE', text)
	value = re.sub(r':?THEN:?', r'THEN', value)
	if len(value) > 0 and value[0] == ":":
		value = value[1:]
	if len(value) > 0 and value[-1] == ":":
		value = value[:-1]
	return value

# read BASIC file
linelist = sys.stdin.read().split('\n')

# process INCLUDEs
i = 0
for line in linelist:
	i = i + 1
	line = minify(line.strip())
	if line.startswith("INCLUDE"):
		filename = line[7:].strip().replace('"', '')
		inslist = open(filename, "r").readlines()
		linelist[i-1:i] = inslist

# process BASIC lines
lines = ""
linenum = 0
data = ""
for line in linelist:

	line = minify(line)
	if line.startswith("DATA"):
		data = data + ',' + minify(line[4:])
	elif line.endswith("ENDIF"):
		line = line[:-6]
		if len(lines) > 0:
			if len(line) > 0 and line[0].isdigit():
				linenum = int(re.findall(r'^\D*(\d+)', line)[0])
				print optimize(lines)
				print optimize(line)
			else:
				print optimize(lines + ":" + line)
		lines = ""
	elif len(line) > 0:
		if line[0].isdigit():
			# line with line number
			linenum = int(re.findall(r'^\D*(\d+)', line)[0])
			if len(lines) > 0:
				print optimize(lines)
			lines = line
		else:
			# line without line number
			if len(lines) == 0:
				# generate line number
				linenum = linenum + 1
				lines = str(linenum) + line
			else:
				# concatenate line
				lines = lines + ":" + line

if len(lines) > 0:
	print optimize(lines)
if len(data) > 0:
	linenum = linenum + 1
	print str(++linenum) + 'DATA' + data[1:]
